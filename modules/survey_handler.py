import streamlit as st
from database_helper import get_all_questions, save_submission
import time
from datetime import datetime

def survey_form(email, full_name, class_name):
    st.title("L√†m b√†i kh·∫£o s√°t")
    
    # Hi·ªÉn th·ªã th√¥ng tin ng∆∞·ªùi d√πng
    st.write(f"**Ng∆∞·ªùi l√†m b√†i:** {full_name}")
    st.write(f"**L·ªõp:** {class_name}")
    st.write(f"**Email:** {email}")
    
    # L·∫•y danh s√°ch c√¢u h·ªèi t·ª´ database
    questions = get_all_questions()
    
    if not questions:
        st.info("Ch∆∞a c√≥ c√¢u h·ªèi n√†o trong h·ªá th·ªëng.")
        return
    
    # Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng c√¢u h·ªèi v√† ƒëi·ªÉm t·ªëi ƒëa
    total_questions = len(questions)
    max_score = sum([q["score"] for q in questions])
    st.write(f"**T·ªïng s·ªë c√¢u h·ªèi:** {total_questions}")
    st.write(f"**ƒêi·ªÉm t·ªëi ƒëa:** {max_score}")
    
    # Kh·ªüi t·∫°o bi·∫øn theo d√µi tr·∫°ng th√°i n·ªôp b√†i
    if "submission_result" not in st.session_state:
        st.session_state.submission_result = None
    
    # N·∫øu ch∆∞a n·ªôp b√†i ho·∫∑c mu·ªën l√†m l·∫°i
    if st.session_state.submission_result is None:
        # T·∫°o form ƒë·ªÉ l∆∞u tr·ªØ c√¢u tr·∫£ l·ªùi
        with st.form(key="survey_form"):
            st.subheader("C√¢u h·ªèi")
            
            # L∆∞u tr·ªØ c√¢u tr·∫£ l·ªùi t·∫°m th·ªùi
            responses = {}
            
            for q in questions:
                q_id = q["id"]
                st.markdown(f"**C√¢u {q_id}: {q['question']}** *(ƒêi·ªÉm: {q['score']})*")
                
                if q["type"] == "Checkbox":
                    responses[str(q_id)] = st.multiselect(
                        "Ch·ªçn ƒë√°p √°n", 
                        options=q["answers"], 
                        key=f"q_{q_id}"
                    )
                elif q["type"] == "Combobox":
                    selected = st.selectbox(
                        "Ch·ªçn 1 ƒë√°p √°n", 
                        options=[""] + q["answers"], 
                        key=f"q_{q_id}"
                    )
                    responses[str(q_id)] = [selected] if selected else []
                
                st.divider()
            
            # N√∫t g·ª≠i ƒë√°p √°n (trong form)
            submit_button = st.form_submit_button(label="üì® G·ª≠i ƒë√°p √°n", use_container_width=True)
            
            if submit_button:
                # L∆∞u c√¢u tr·∫£ l·ªùi v√†o database v·ªõi ID duy nh·∫•t
                result = save_submission(email, responses)
                
                if result:
                    st.session_state.submission_result = result
                    st.session_state.max_score = max_score
                    st.rerun()  # L√†m m·ªõi trang ƒë·ªÉ hi·ªÉn th·ªã k·∫øt qu·∫£
                else:
                    st.error("‚ùå C√≥ l·ªói x·∫£y ra khi g·ª≠i ƒë√°p √°n, vui l√≤ng th·ª≠ l·∫°i!")
    
    # Hi·ªÉn th·ªã k·∫øt qu·∫£ sau khi n·ªôp b√†i
    else:
        result = st.session_state.submission_result
        max_score = st.session_state.max_score
        
        st.success(f"‚úÖ ƒê√£ ghi nh·∫≠n b√†i l√†m c·ªßa b·∫°n! (M√£ n·ªôp: {result['id']})")
        
        # Hi·ªÉn th·ªã th√¥ng tin v·ªÅ l·∫ßn n·ªôp n√†y
        submit_time = datetime.fromtimestamp(result["timestamp"]).strftime("%H:%M:%S %d/%m/%Y")
        
        # Hi·ªÉn th·ªã k·∫øt qu·∫£ trong m·ªôt container m√†u xanh
        with st.container():
            st.markdown(f"""
            <div style="padding: 20px; background-color: #e6f7f2; border-radius: 10px; margin: 10px 0;">
                <h3 style="color: #2e7d64;">Th√¥ng tin b√†i n·ªôp</h3>
                <p><b>Th·ªùi gian n·ªôp:</b> {submit_time}</p>
                <p><b>ƒêi·ªÉm s·ªë:</b> {result['score']}/{max_score}</p>
                <p><b>T·ª∑ l·ªá ƒë√∫ng:</b> {(result['score']/max_score*100):.1f}%</p>
            </div>
            """, unsafe_allow_html=True)
        
        # N√∫t l√†m b√†i l·∫°i (ngo√†i form)
        if st.button("üîÑ L√†m b√†i l·∫°i", use_container_width=True):
            st.session_state.submission_result = None
            st.rerun()